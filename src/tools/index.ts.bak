/**
 * Tool Registration
 * Registers all Vikunja tools with the MCP server
 */

import type { McpServer } from '@modelcontextprotocol/sdk/server/mcp.js';
import type { AuthManager } from '../auth/AuthManager';
import type { VikunjaClientFactory } from '../client/VikunjaClientFactory';

import { registerAuthTool } from './auth';
import { registerTasksTool } from './tasks';
import { registerProjectsTool } from './projects';
import { registerLabelsTool } from './labels';
import { registerTeamsTool } from './teams';
import { registerUsersTool } from './users';
import { registerFiltersTool } from './filters';
import { registerTemplatesTool } from './templates';
import { registerWebhooksTool } from './webhooks';
import { registerBatchImportTool } from './batch-import';
import { registerExportTool } from './export';

export function registerTools(
  server: McpServer, 
  authManager: AuthManager, 
  clientFactory: VikunjaClientFactory
): void {
  // Register all tool handlers with dependency injection
  registerAuthTool(server, authManager);
  registerTasksTool(server, authManager, clientFactory);
  registerProjectsTool(server, authManager, clientFactory);
  registerLabelsTool(server, authManager, clientFactory);
  registerTeamsTool(server, authManager, clientFactory);

  // Register filters tool (needs auth manager for session-scoped storage)
  registerFiltersTool(server, authManager, clientFactory);

  // Register templates tool
  registerTemplatesTool(server, authManager, clientFactory);

  // Register webhooks tool last to avoid circular dependency issues
  registerWebhooksTool(server, authManager, clientFactory);

  // Register batch import tool
  registerBatchImportTool(server, authManager, clientFactory);

  // Only register user and export tools if authenticated with JWT
  // These tools require JWT authentication to function properly
  if (authManager.isAuthenticated() && authManager.getAuthType() === 'jwt') {
    registerUsersTool(server, authManager, clientFactory);
    registerExportTool(server, authManager, clientFactory);
  }
}

/**
 * Legacy registerTools function for backwards compatibility
 * @deprecated Use the version with clientFactory parameter
 */
export function registerToolsLegacy(server: McpServer, authManager: AuthManager): void {
  // This maintains backwards compatibility by using the global factory
  // Tools will fall back to the legacy getVikunjaClient() function
  registerTools(server, authManager, null as any);
}
